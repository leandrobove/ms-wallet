version: "3.9"

services:

  nginx:
    container_name: nginx
    build: ./docker/nginx
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      ms-wallet-core:
        condition: service_started
      ms-balance:
        condition: service_started
    networks:
      - wallet-network

  ms-wallet-core:
    container_name: ms-wallet-core
    build: ./ms-wallet-core
    restart: unless-stopped
    env_file:
      - ./ms-wallet-core/.env
    depends_on:
      wallet-core-db:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - wallet-network

  wallet-core-db:
    image: mysql:8
    container_name: wallet-core-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: walletdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
      MYSQL_ROOT_HOST: '%'
    restart: always
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 15s
      interval: 5s
      timeout: 5s
      retries: 6
    networks:
      - wallet-network

  ms-balance:
    container_name: ms-balance
    build: ./ms-balance
    restart: unless-stopped
    env_file:
      - ./ms-balance/.env
    depends_on:
      balance-db:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - wallet-network

  balance-db:
    image: mongo:6.0.6
    container_name: balancedb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: balancedb
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: secret
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/balancedb --quiet
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - wallet-network

  zookeeper:
    image: "confluentinc/cp-zookeeper:6.1.0"
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      TZ: Sao_Paulo/Brazil
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - wallet-network

  kafka:
    image: "confluentinc/cp-kafka:6.1.0"
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      # Exposes 9092 for external connections to the broker
      # Use kafka:29092 for connections internal on the docker network
      # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - "9092:9092"
    environment:
      TZ: Sao_Paulo/Brazil
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_ENABLE: 'false'
    networks:
      - wallet-network

networks:
  wallet-network:
    driver: bridge